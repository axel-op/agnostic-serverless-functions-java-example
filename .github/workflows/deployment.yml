name: Deploy on the cloud and test the API

on:
  push:
    branches:
      - main
    paths:
      - "**/src/main/**"
      - "**/pom.xml"
      - ".github/workflows/deployment.yml"
      - ".github/workflows/test.yml"

env:
  MAVEN_SERVER_ID: github-packages # this is the id set in pom.xml
  FUNCTION_NAME: agnostic-function-test-1

jobs:
  package:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        provider: [aws, azure, gcloud]

    env:
      AGNOSTIC_FUNCTION_ADAPTER: ${{ matrix.provider }}

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 11
          server-id: ${{ env.MAVEN_SERVER_ID }}
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
      - name: Package
        id: package
        uses: axel-op/agnostic-serverless-functions-java-package-action@main
        with:
          function-name: ${{ env.FUNCTION_NAME }}
          faas-provider: ${{ matrix.provider }}
        env:
          MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
      - name: Upload deployment directory
        uses: actions/upload-artifact@v3
        with:
          name: deployment-directory-${{ matrix.provider }}
          path: ${{ steps.package.outputs.deployment-directory }}

  deploy-azure:
    runs-on: ubuntu-latest
    needs: package
    outputs:
      url: "https://${{ env.FUNCTION_NAME }}.azurewebsites.net/api/handler"
    steps:
      - name: Download deployment directory
        id: download
        uses: actions/download-artifact@v3
        with:
          name: deployment-directory-azure
      - name: Deploy on Azure
        uses: Azure/functions-action@v1
        with:
          app-name: ${{ env.FUNCTION_NAME }}
          package: ${{ steps.download.outputs.download-path }}
          publish-profile: ${{ secrets.AZURE_PUBLISH_PROFILE }}
          scm-do-build-during-deployment: true

  deploy-gcloud:
    runs-on: ubuntu-latest
    needs: package
    outputs:
      url: ${{ steps.deploy.outputs.url }}
    steps:
      - name: Download deployment directory
        id: download
        uses: actions/download-artifact@v3
        with:
          name: deployment-directory-gcloud
      - name: Authenticate on Google Cloud
        uses: google-github-actions/auth@v0
        with:
          credentials_json: ${{ secrets.GCLOUD_SERVICE_ACCOUNT }}
      - name: Deploy on Google Cloud
        id: deploy
        uses: google-github-actions/deploy-cloud-functions@v0
        with:
          name: ${{ env.FUNCTION_NAME }}
          region: europe-west1
          source_dir: ${{ steps.download.outputs.download-path }}
          entry_point: fr.axelop.agnosticserverlessfunctions.FunctionInvoker
          runtime: java11

  deploy-aws:
    runs-on: ubuntu-latest
    needs: package
    outputs:
      url: ${{ steps.url.outputs.url }}
    permissions:
      id-token: write # This is required for requesting the JWT
    env:
      region: eu-west-3
    steps:
      - name: Download deployment directory
        id: download
        uses: actions/download-artifact@v3
        with:
          name: deployment-directory-aws
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE }}
          aws-region: ${{ env.region }}
      - name: Deploy on AWS
        run: |
          FILE=$(ls ${{ steps.download.outputs.download-path }} | grep '.jar$')
          aws lambda update-function-code --function-name $FUNCTION_NAME --zip-file "fileb://$FILE"
      - name: Set URL as output
        id: url
        run: |
          RESPONSE=$(aws lambda get-function-url-config --function-name $FUNCTION_NAME)
          URL=$(jq -r '.FunctionUrl' <<< "$RESPONSE")
          echo "url=$URL" >> $GITHUB_OUTPUT

  test:
    needs: [deploy-aws, deploy-azure, deploy-gcloud]
    strategy:
      fail-fast: false
      matrix:
        job: [deploy-aws, deploy-azure, deploy-gcloud]
    uses: ./.github/workflows/test.yml
    with:
      url: ${{ needs[matrix.job].outputs.url }}
